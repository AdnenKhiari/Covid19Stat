[{"/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/index.js":"1","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/App.js":"2","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/reportWebVitals.js":"3","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/AllData.js":"4","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/NavBar.js":"5","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/TsStatsComponent.js":"6","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/Footer.js":"7","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/CustomCountry.js":"8","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/Selector.js":"9","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/CardStatComponents.js":"10","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/Vaccines.js":"11","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/Loading.js":"12","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/utils/customHooks.js":"13","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/MainMap.js":"14","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/Card.js":"15","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/TsStats.js":"16","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/VaccineListElement.js":"17","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/utils/colors.js":"18"},{"size":538,"mtime":1616533588599,"results":"19","hashOfConfig":"20"},{"size":3643,"mtime":1616534840385,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1616533588599,"results":"22","hashOfConfig":"20"},{"size":453,"mtime":1616534147393,"results":"23","hashOfConfig":"20"},{"size":1093,"mtime":1616533588595,"results":"24","hashOfConfig":"20"},{"size":513,"mtime":1616533588599,"results":"25","hashOfConfig":"20"},{"size":163,"mtime":1616533588595,"results":"26","hashOfConfig":"20"},{"size":3640,"mtime":1616534166319,"results":"27","hashOfConfig":"20"},{"size":2150,"mtime":1616533588595,"results":"28","hashOfConfig":"20"},{"size":597,"mtime":1616534153565,"results":"29","hashOfConfig":"20"},{"size":722,"mtime":1616534209652,"results":"30","hashOfConfig":"20"},{"size":962,"mtime":1616533588595,"results":"31","hashOfConfig":"20"},{"size":661,"mtime":1616533588599,"results":"32","hashOfConfig":"20"},{"size":2106,"mtime":1616533588595,"results":"33","hashOfConfig":"20"},{"size":2356,"mtime":1616533588595,"results":"34","hashOfConfig":"20"},{"size":5592,"mtime":1616534203459,"results":"35","hashOfConfig":"20"},{"size":747,"mtime":1616533588599,"results":"36","hashOfConfig":"20"},{"size":212,"mtime":1616533588599,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b69vtr",{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},"/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/index.js",[],"/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/App.js",["83","84","85","86","87"],"/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/reportWebVitals.js",[],"/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/AllData.js",[],["88","89"],"/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/NavBar.js",["90","91","92"],"import \"./../style/nav.scss\"\nimport hmImg from \"./../assets/home.svg\"\nimport covidImg from \"./../assets/coronavirus.svg\"\nimport virusImg from \"./../assets/virus.svg\"\nimport testImg from \"./../assets/test-sanguin.svg\"\nimport vaccineImg from \"./../assets/syringe.svg\"\nimport React from \"react\"\nimport{Link, Router,Route} from \"react-router-dom\"\nconst NavBar = ({nv})=> {\n\n    return <>\n     <nav ref={nv}>\n\n        <div className=\"nav__holder\"> \n        <h1> Covid 19</h1>\n        <ul className=\"nav__navigation\">\n            <li> <img src={hmImg} alt=\"\"/> <Link to=\"/\" >World</Link></li>\n            <li> <img src={covidImg} alt=\"\"/>  <Link to=\"/custom/\">Custom Map</Link></li>\n            <li> <img src={vaccineImg} alt=\"\"/>  <Link to=\"/vaccine/\">Vaccine</Link></li>\n            <li> <img src={testImg} alt=\"\"/>  <a href=\"https://www.who.int/fr/emergencies/diseases/novel-coronavirus-2019\" target=\"__blank\">Infos</a></li>\n        </ul>\n        </div>\n    </nav>\n    \n    </>\n}\nexport default NavBar;\n\n/*            <li> <img src={virusImg} alt=\"\"/>  <Link to=\"/aboutus\">About Us</Link></li>\n*/","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/TsStatsComponent.js",[],"/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/Footer.js",[],"/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/CustomCountry.js",["93","94","95","96","97","98","99","100","101","102"],"import { useParams } from \"react-router-dom\";\nimport React from 'react'\nimport TsComponent from \"./TsStatsComponent\"\nimport{useFetch} from \"./../utils/customHooks\"\nimport { CountryStat } from \"./TsStats\";\nimport CardStatComponent from \"./CardStatComponents\"\n\n\nconst CustomCountry = ( {allData,map,tsData,tsDataLoading,allDataLoading,dayCount}) => {\n    var {country,province} = useParams()\n\n    const notFoundError = \"Error , it seems like the country specific infos is not supported by the dataset or that the name is incorrect , please review your country and make sure it is on the dataset\";\n    const [unableError, setIsUnableError] = React.useState(false);\n    const [historicalData, setHistoricalData] = React.useState(null);\n    const [mydata,setMyData] = React.useState(null);\n    var [countriesSummaryStat,countriesSummaryStatLoading,countriesSummaryStatError] = useFetch(\"https://disease.sh/v3/covid-19/countries/\"+country+\"?strict=false&allowNull=true\");\n    var [oldcountriesSummaryStat,oldcountriesSummaryStatLoading,oldcountriesSummaryStatError] = useFetch(\"https://disease.sh/v3/covid-19/countries/\"+country+\"?yesterday=true&strict=false&allowNull=true\");\n    var [oldoldcountriesSummaryStat,oldoldcountriesSummaryStatLoading,oldoldcountriesSummaryStatError] = useFetch(\"https://disease.sh/v3/covid-19/countries/\"+country+\"?twoDaysAgo=true&strict=false&allowNull=true\");\n\n    React.useEffect(() => {\n        if(!tsDataLoading && !allDataLoading && tsData!== null && allData!== null ){\n\n        let foundFromTsData = tsData.find(x => x.country === country && (x.province === province));\n        let foundFromMyData = allData.find(x => x.country === country && (x.province === province));\n        let newmydata= {...foundFromMyData,...foundFromTsData}\n        if((!foundFromMyData || !foundFromTsData)){\n            console.log(tsData,allData,\"my data\")\n            setIsUnableError(true)\n        }else {\n            setIsUnableError(false)\n            console.log(\"gut\")\n            if(!mydata || (mydata && ((newmydata.country !== mydata.country)  || (newmydata.province !== mydata.province))))\n                setMyData(newmydata)\n        \n        if(map !== null && mydata !== null )\n           map.flyTo([mydata.coordinates.latitude,mydata.coordinates.longitude],10,{duration:1.5})\n        if(mydata !== null ){\n            const queryUrl = province !== \"null\" ? \"https://disease.sh/v3/covid-19/historical/\"+country+\"/\"+province+\"?lastdays=\"+\"all\" :  \"https://disease.sh/v3/covid-19/historical/\"+country+\"?lastdays=\"+\"all\";\n            fetch(queryUrl).then((data) => {\n                return data.json()\n            }).then((data) => {\n                setHistoricalData(data);      \n            }).catch((err)=>{\n                setIsUnableError(true)\n            })\n        }\n            }\n       }\n      /* if(!countriesSummaryStatLoading)\n       console.log(countriesSummaryStat ,\"new\")*/\n    }, [tsData,allData,mydata,country,province,tsDataLoading,allDataLoading,dayCount,countriesSummaryStatLoading])\n\n        return(<>\n            <div> \n                {/*unableError!==null ? notFoundError : \"Found :\"+country + \" \" + province*/}\n            </div>\n            {  <CardStatComponent  arr = {   ['cases', 'deaths', 'recovered', 'tests', 'population'] }\ndata = {oldcountriesSummaryStat} dataLoading = {oldcountriesSummaryStatLoading} lastData = {oldoldcountriesSummaryStat} lastDataLoading = {oldoldcountriesSummaryStatLoading} />}\n            {(historicalData!==null && mydata !== null) &&  (<TsComponent historicalData = {historicalData} mydata = {mydata} />)}\n        </>\n    ) \n}\n\n\nexport default CustomCountry;","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/Selector.js",[],"/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/CardStatComponents.js",[],"/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/Vaccines.js",["103"],"import {useFetch} from \"./../utils/customHooks\"\nimport React from 'react'\nimport \"./../style/vaccine.scss\"\nimport VaccineListElement from \"./VaccineListElement\"\nconst Vaccines = ()=>{\n    const [vaccineData,vaccineDataLoading,vaccineDataError] = useFetch(\"https://disease.sh/v3/covid-19/vaccine\");\n    return <>\n    <div className =\"stat-header\">\n        <h1>{\"Vaccines :\"}</h1>\n\n    </div>        \n    <div className=\"vaccine\">\n        {!vaccineDataLoading && vaccineData.data.map((item,index) =>{\n            return <VaccineListElement data = {item} key={index} />\n        })}\n\n    </div>\n    <small className=\"source\"> <span>Source : </span>{vaccineData && vaccineData.source}</small>\n\n    </>\n}\nexport default Vaccines","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/Loading.js",[],"/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/utils/customHooks.js",["104"],"import {useState,useEffect} from 'react'\nconst useFetch = (url,callBack = null) =>{\n    const [loading,setLoading] = useState(true);\n    const [error,setError] = useState(null);\n    const [data,setData] = useState(null);\n\n    useEffect(() => {\n        fetch(url).then((data) => {\n              return data.json()\n          }).then((data) => {     \n              if(callBack !== null) \n                data = callBack(data)\n              setData(data); \n              setLoading(false);\n          }).catch((err)=>{\n              setError(err);\n              setLoading(false);\n          }) \n    },[url])\n    \n    return [data,loading,error];\n}\n\nexport {useFetch}","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/MainMap.js",["105"],"import 'react-leaflet'\nimport React from 'react'\nimport {useMap, MapContainer  ,TileLayer,Marker ,Popup } from 'react-leaflet';\nimport {useEffect} from 'react'\nimport { Link } from 'react-router-dom';\nimport L from 'leaflet'\nimport pinicon from \"./../assets/marker.svg\"\nimport Loading from './Loading';\nconst customMarker = new  L.icon (\n  {\n    iconUrl : pinicon ,\n    iconSize: [50, 52],\n    iconAnchor: [25, 52],\n    popupAnchor: [0, -52],\n    shadowSize: [0, 0],\n    shadowAnchor: [20, 52]\n  }\n)\n\nconst MapProp = ({setMap})=>{\n    const map = useMap()\n    useEffect(()=>{\n        setMap(map)\n    },[])\n\n    return null\n}\nconst CustomMarker = ({data})=>{\n    return (<>\n\n       {data ?  (<Marker position = {[data.coordinates.latitude,data.coordinates.longitude]} className=\"marker\" icon={customMarker}>\n            <Popup className = \"popUp\">\n                {data.province!== \"null\"  ? (<>\n                    <h2>{data.province}</h2>\n                    <h4>{data.country}</h4>\n                    </>) :( <>\n                        <h2>{data.country}</h2>\n                     </>)\n\n\n                }\n                <p>Confirmed : {data.stats.confirmed}</p>\n                <p>Deaths : {data.stats.deaths}</p>\n                <p>Recovered : {data.stats.recovered}</p>\n                <Link to={\"/custom/\"+(data.country)+(data.province!==\"null\" ? (\"/\"+(data.province)) : \"/null\")} >Find more...</Link>\n            </Popup>\n        </Marker>) : (<></>)\n        }\n\n    </>)\n}\nconst MainMap = ({allData,setMap}) => {\n\n    return (<><React.Suspense fallback={        <Loading/>\n}>  <MapContainer center = {[15,15]} zoom = {10}>\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <MapProp setMap = {setMap}/>\n            {allData.map((item,index)=>{\n               return <CustomMarker data={item} key={index} />\n            })}\n\n        </MapContainer >\n        </React.Suspense>\n        </>\n    )\n\n}\n\nexport default (MainMap);","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/Card.js",["106"],"import \"./../style/card.scss\"\nimport {useFetch} from \"./../utils/customHooks\"\nimport upArrow from \"./../assets/up-arrow.svg\"\nimport downArrow from \"./../assets/down-arrow.svg\"\n\nconst Card = ({data,dataArray,lastData = null}) => {\n   \n    return <div className=\"card-container-head\">\n        <div className=\"card-container\">\n            <div className=\"card-container__left\">\n                <div className=\"card-title\">\n                    <h1>{data.country != null ?  data.country : \"World\"}</h1>\n                    <div className=\"card-title__flag\" style={{backgroundImage : \"url(\"+( data.countryInfo ? (data.countryInfo.flag || \"\") : \"\" )+ \")\",backgroundSize:\"cover\",backgroundRepeat:\"no-repeat\",backgroundPosition:\"center\"}}></div>\n                </div>\n                <div className=\"card-body\">\n                   { dataArray.map( (x,i) => <div  key = {i} className=\"card-body__item\">\n                        <div className=\"field\">{x}</div>\n                        <div>{data[x] || \"Missing Value\"}</div>\n                        <div>{lastData===null  ? \"\" : <img src={parseInt(lastData[x]) < parseInt(data[x]) ? upArrow : downArrow } style={{opacity :( parseInt(lastData[x]) === parseInt(data[x]) )? 0 : 1 }} alt=\"\"/> }</div>\n                    </div>)\n                    }\n                </div>\n\n            </div>    \n            <div className=\"card-container__right\">\n                    <div className=\"card-circle-container\">\n                        {['todayCases','todayTests','todayDeaths','todayRecovered'].map((w,i) => <div key={i}  className=\"card-circle-item\">\n                            <h2>{w === \"todayTests\" ?  \"LatestTests\" : w}</h2>\n                            <div className=\"circle\">{ (w === \"todayTests\" && lastData !== null) ?  -parseInt(lastData[\"tests\"])+parseInt(data[\"tests\"]) :  (data[w] || \"Missing Value\" ) }</div>\n                        </div>)}\n                    </div>\n            </div> \n            <div className=\"card-container__footer\">\n                <div className=\"card-source\">\n                        Sources : <small>disease.sh - Worldometers</small>\n                </div>\n                <div className=\"card-date\">\n                       Updated Last At: {new Date(data.updated).toUTCString()}\n                </div>\n\n            </div> \n            </div> \n    </div>\n}\n\nexport default Card","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/TsStats.js",["107"],"import React from 'react'\nimport * as V from 'victory'\nimport colors from \"../utils/colors\"\nconst DefaultPlot =({dataAll})=> {\n  const data = dataAll.data\n  const suffixUnit = [\"\",\"K\",\"M\",\"B\"]\n  const ref = React.useRef(null)\n\n    const [selectedDomain, setselectedDomain] = React.useState(null);\n    const [zoomDomain, setzoomDomain] = React.useState({x : [data[0].x,data[data.length-1].x]});\n\n    const handleZoom  =((domain)=> {\n        setselectedDomain(domain);\n    })\n\n    const handleBrush  = (domain)=> {\n      setzoomDomain(domain);\n    }\n\n    const LimitData = (data)=>{\n       return zoomDomain!==null? data.filter(d=> d.x >= zoomDomain.x[0] && d.x <= zoomDomain.x[1]).filter((d,i) => ((i % Math.max(1,Math.ceil(((zoomDomain.x[1].getTime() - zoomDomain.x[0].getTime())/(1000*3600*24))/110) ) ) === 0)) : data;\n    }\n    const tickData = (data)=> ([...new Set(data.map(o => new Date(o.x.getFullYear(),o.x.getMonth(),1)))]);\n\n    const datalabels = (data)=> (data).map(o =>  o.y.toString());\n\n    React.useEffect(() => {\n      console.log(\"zum\",zoomDomain)\n      console.log(\"limit\",LimitData(data))\n\n  }, [zoomDomain]);\n\n    return (\n      <div className=\"graph-container\" ref = {ref}>\n          <V.VictoryChart \n          height = {\n             (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent))? 850 : 400\n          }\n            width = { 700}\n            style={{\n              axisLabel: { padding: 130 },\n          }}\n            scale={{x: \"time\"}}\n            theme={V.VictoryTheme.material}\n            containerComponent={\n              <V.VictoryZoomContainer \n                responsive = {true}\n                zoomDimension=\"x\"\n                zoomDomain={zoomDomain}\n                onZoomDomainChange={handleZoom}\n              />\n            }\n          >\n          <V.VictoryAxis  dependentAxis                 \n          theme={V.VictoryTheme.material}\n\n        tickFormat={(x) => {\n            \n            return x / Math.pow(10,dataAll.divider*3)  + suffixUnit[dataAll.divider];\n        } }\n        style={{size:10}}/>\n          \n          <V.VictoryAxis  />\n\n            <V.VictoryBar\n\n              style={{\n                fill: colors.red\n              }}\n              data={LimitData(data)}\n              labels={datalabels(LimitData(data))}\n              labelComponent={\n                <V.VictoryTooltip      pointerOrientation=\"bottom\" cornerRadius={30}\n                flyoutStyle={{ stroke: colors.rose, strokeWidth: 1,fill : colors.white}}\n                />\n              }\n            />\n\n<V.VictoryLine\n\n              style={{\n                data: {stroke: colors.rose}\n              }}\n              data={LimitData(data)}            />\n\n\n            <V.VictoryScatter\n            labels={datalabels(LimitData(data))}\n            size={1.5}\n            labelComponent={\n              <V.VictoryTooltip      pointerOrientation=\"bottom\" cornerRadius={30}\n              flyoutStyle={{ stroke: colors.rose, strokeWidth: 1,fill : colors.white}}\n              />\n            }\n              style={{\n                data: {fill: colors.black}\n              }}\n              data={LimitData(data)}            />\n\n\n          </V.VictoryChart>\n\n          <V.VictoryChart\n                      theme={V.VictoryTheme.material}\n\n            height={90}\n            width={700}\n            scale={{x: \"time\"}}\n            padding={{top: 0, left: 20, right: 20, bottom: 50}}\n            containerComponent={\n              <V.VictoryBrushContainer responsive={true}\n                brushDimension=\"x\"\n                brushDomain={selectedDomain}\n                onBrushDomainChange={handleBrush}\n              />\n            }\n          >\n            <V.VictoryAxis\n                theme={V.VictoryTheme.material}\n\n              tickValues={tickData(data)}\n              tickFormat={(x) => {\n                  const ll = x.getFullYear().toString()\n                  return x.getMonth() + \"/\" + ll.slice(2)\n              } }\n              style={{size:10}}\n            />\n\n          <V.VictoryLine\n                      theme={V.VictoryTheme.material}\n\n              style={{\n                data: {stroke: colors.red}\n              }}\n              data={data}            />\n          </V.VictoryChart>\n\n      </div>\n\n    );\n \n    \n\n}\nconst processDT =  (type,moreData)=>{\n    var xs = [type] \n    var divider = 0;\n    var values = xs.map((p)=>{\n      //to be salahed\n        var x = Object.keys(moreData.timeline[p])\n        var max = Math.max(...(x.map(u => moreData.timeline[p][u])))\n        var multiplier = Math.ceil(Math.log10(max))\n        while(multiplier > 3){\n          multiplier-= 3;\n          divider++;\n        }\n      return x.map((u)=>{\n          let k = u.split('/').reverse();k[0] = \"20\".concat(k[0]);\n                return {\n                    x :  new Date(k[0],k[2],k[1]),\n                    y : moreData.timeline[p][u] \n                }\n            })\n        \n    })[0]\n     return {data :  values,divider}\n}\n\nconst CountryStat = ({title,stat,historicalData,mydata})=>{\n  /*React.useEffect(() => {\n    console.log(mydata,\"hist\")\n    return () => {\n    };\n  }, [mydata]);*/\n    return<>\n    <div className =\"stat-header\">\n    <h1 >{title}</h1>\n    </div>\n    <DefaultPlot  dataAll={ processDT(stat,historicalData)} />\n    <div style={{paddingLeft:\"60px\",fontSize:\"1.1rem\"}}> Sources :disease.sh - Johns Hopkins University, updated every 10 minutes</div>\n    {/*<div style={{paddingLeft:\"60px\",fontSize:\"1.1rem\"}}> Last Update : {mydata.updatedAt}</div>*/}\n    </>\n}\n\n\nexport {CountryStat}","/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/components/VaccineListElement.js",[],"/home/adnen/Documents/Projects/web/CovidProject/Covid19Stat/src/utils/colors.js",["108"],"const black = \"rgb(53, 45, 57)\"\nconst rose = \"rgb(255, 105, 120)\"\nconst white = \"rgb(255, 252, 249)\"\nconst red = \"rgb(206, 58, 77)\"\nconst blue = \"rgb(8, 75, 131)\"\n\nexport default { black, rose, white, red, blue }",{"ruleId":"109","severity":1,"message":"110","line":5,"column":3,"nodeType":"111","messageId":"112","endLine":5,"endColumn":7},{"ruleId":"109","severity":1,"message":"113","line":22,"column":51,"nodeType":"111","messageId":"112","endLine":22,"endColumn":73},{"ruleId":"109","severity":1,"message":"114","line":23,"column":57,"nodeType":"111","messageId":"112","endLine":23,"endColumn":82},{"ruleId":"109","severity":1,"message":"115","line":25,"column":20,"nodeType":"111","messageId":"112","endLine":25,"endColumn":31},{"ruleId":"109","severity":1,"message":"116","line":26,"column":39,"nodeType":"111","messageId":"112","endLine":26,"endColumn":55},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"109","severity":1,"message":"121","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":16},{"ruleId":"109","severity":1,"message":"122","line":8,"column":14,"nodeType":"111","messageId":"112","endLine":8,"endColumn":20},{"ruleId":"109","severity":1,"message":"123","line":8,"column":21,"nodeType":"111","messageId":"112","endLine":8,"endColumn":26},{"ruleId":"109","severity":1,"message":"124","line":5,"column":10,"nodeType":"111","messageId":"112","endLine":5,"endColumn":21},{"ruleId":"109","severity":1,"message":"125","line":12,"column":11,"nodeType":"111","messageId":"112","endLine":12,"endColumn":24},{"ruleId":"109","severity":1,"message":"126","line":13,"column":12,"nodeType":"111","messageId":"112","endLine":13,"endColumn":23},{"ruleId":"109","severity":1,"message":"127","line":16,"column":10,"nodeType":"111","messageId":"112","endLine":16,"endColumn":30},{"ruleId":"109","severity":1,"message":"128","line":16,"column":59,"nodeType":"111","messageId":"112","endLine":16,"endColumn":84},{"ruleId":"109","severity":1,"message":"129","line":17,"column":65,"nodeType":"111","messageId":"112","endLine":17,"endColumn":93},{"ruleId":"109","severity":1,"message":"130","line":18,"column":71,"nodeType":"111","messageId":"112","endLine":18,"endColumn":102},{"ruleId":"131","severity":1,"message":"132","line":38,"column":130,"nodeType":"133","messageId":"134","endLine":38,"endColumn":131},{"ruleId":"131","severity":1,"message":"132","line":38,"column":205,"nodeType":"133","messageId":"134","endLine":38,"endColumn":206},{"ruleId":"135","severity":1,"message":"136","line":51,"column":8,"nodeType":"137","endLine":51,"endColumn":114,"suggestions":"138"},{"ruleId":"109","severity":1,"message":"139","line":6,"column":43,"nodeType":"111","messageId":"112","endLine":6,"endColumn":59},{"ruleId":"135","severity":1,"message":"140","line":19,"column":7,"nodeType":"137","endLine":19,"endColumn":12,"suggestions":"141"},{"ruleId":"135","severity":1,"message":"142","line":24,"column":7,"nodeType":"137","endLine":24,"endColumn":9,"suggestions":"143"},{"ruleId":"109","severity":1,"message":"144","line":2,"column":9,"nodeType":"111","messageId":"112","endLine":2,"endColumn":17},{"ruleId":"135","severity":1,"message":"145","line":31,"column":6,"nodeType":"137","endLine":31,"endColumn":18,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":7,"column":1,"nodeType":"149","endLine":7,"endColumn":49},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'worldSummaryStatsError' is assigned a value but never used.","'oldworldSummaryStatsError' is assigned a value but never used.","'setDayCount' is assigned a value but never used.","'worldTsDataError' is assigned a value but never used.","no-native-reassign",["150"],"no-negated-in-lhs",["151"],"'virusImg' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'CountryStat' is defined but never used.","'notFoundError' is assigned a value but never used.","'unableError' is assigned a value but never used.","'countriesSummaryStat' is assigned a value but never used.","'countriesSummaryStatError' is assigned a value but never used.","'oldcountriesSummaryStatError' is assigned a value but never used.","'oldoldcountriesSummaryStatError' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.","ArrayExpression",["152"],"'vaccineDataError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'callBack'. Either include it or remove the dependency array. If 'callBack' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["153"],"React Hook useEffect has missing dependencies: 'map' and 'setMap'. Either include them or remove the dependency array. If 'setMap' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["154"],"'useFetch' is defined but never used.","React Hook React.useEffect has missing dependencies: 'LimitData' and 'data'. Either include them or remove the dependency array.",["155"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [tsData, allData, mydata, country, province, tsDataLoading, allDataLoading, dayCount, countriesSummaryStatLoading, map]",{"range":"164","text":"165"},"Update the dependencies array to be: [callBack, url]",{"range":"166","text":"167"},"Update the dependencies array to be: [map, setMap]",{"range":"168","text":"169"},"Update the dependencies array to be: [LimitData, data, zoomDomain]",{"range":"170","text":"171"},[2917,3023],"[tsData, allData, mydata, country, province, tsDataLoading, allDataLoading, dayCount, countriesSummaryStatLoading, map]",[596,601],"[callBack, url]",[602,604],"[map, setMap]",[1115,1127],"[LimitData, data, zoomDomain]"]