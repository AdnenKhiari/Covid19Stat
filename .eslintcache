[{"D:\\Project\\achref\\Covid19Stat\\src\\index.js":"1","D:\\Project\\achref\\Covid19Stat\\src\\reportWebVitals.js":"2","D:\\Project\\achref\\Covid19Stat\\src\\App.jsx":"3","D:\\Project\\achref\\Covid19Stat\\src\\components\\AllData.jsx":"4","D:\\Project\\achref\\Covid19Stat\\src\\components\\CustomCountry.jsx":"5","D:\\Project\\achref\\Covid19Stat\\src\\components\\Footer.jsx":"6","D:\\Project\\achref\\Covid19Stat\\src\\components\\TsStatsComponent.jsx":"7","D:\\Project\\achref\\Covid19Stat\\src\\components\\Selector.jsx":"8","D:\\Project\\achref\\Covid19Stat\\src\\components\\NavBar.jsx":"9","D:\\Project\\achref\\Covid19Stat\\src\\components\\Vaccines.jsx":"10","D:\\Project\\achref\\Covid19Stat\\src\\components\\CardStatComponents.jsx":"11","D:\\Project\\achref\\Covid19Stat\\src\\components\\Loading.jsx":"12","D:\\Project\\achref\\Covid19Stat\\src\\utils\\customHooks.jsx":"13","D:\\Project\\achref\\Covid19Stat\\src\\components\\MainMap.jsx":"14","D:\\Project\\achref\\Covid19Stat\\src\\components\\TsStats.jsx":"15","D:\\Project\\achref\\Covid19Stat\\src\\components\\VaccineListElement.jsx":"16","D:\\Project\\achref\\Covid19Stat\\src\\components\\Card.jsx":"17","D:\\Project\\achref\\Covid19Stat\\src\\utils\\colors.jsx":"18"},{"size":556,"mtime":1655315694455,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1655315694455,"results":"21","hashOfConfig":"20"},{"size":3782,"mtime":1656841139593,"results":"22","hashOfConfig":"20"},{"size":463,"mtime":1655315694449,"results":"23","hashOfConfig":"20"},{"size":3704,"mtime":1655315694450,"results":"24","hashOfConfig":"20"},{"size":169,"mtime":1655315694450,"results":"25","hashOfConfig":"20"},{"size":522,"mtime":1655315694454,"results":"26","hashOfConfig":"20"},{"size":2200,"mtime":1655315694454,"results":"27","hashOfConfig":"20"},{"size":1122,"mtime":1655315694453,"results":"28","hashOfConfig":"20"},{"size":743,"mtime":1655315694455,"results":"29","hashOfConfig":"20"},{"size":628,"mtime":1656840777497,"results":"30","hashOfConfig":"20"},{"size":1011,"mtime":1655315694452,"results":"31","hashOfConfig":"20"},{"size":684,"mtime":1655315694458,"results":"32","hashOfConfig":"20"},{"size":2177,"mtime":1655315694452,"results":"33","hashOfConfig":"20"},{"size":5777,"mtime":1655315694454,"results":"34","hashOfConfig":"20"},{"size":770,"mtime":1655315694455,"results":"35","hashOfConfig":"20"},{"size":2401,"mtime":1655315694450,"results":"36","hashOfConfig":"20"},{"size":218,"mtime":1655315694458,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qgl2iv",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},"D:\\Project\\achref\\Covid19Stat\\src\\index.js",[],"D:\\Project\\achref\\Covid19Stat\\src\\reportWebVitals.js",[],"D:\\Project\\achref\\Covid19Stat\\src\\App.jsx",["83","84","85","86","87"],"D:\\Project\\achref\\Covid19Stat\\src\\components\\AllData.jsx",[],["88","89"],"D:\\Project\\achref\\Covid19Stat\\src\\components\\CustomCountry.jsx",["90","91","92","93","94","95","96","97","98","99"],"import { useParams } from \"react-router-dom\";\r\nimport React from 'react'\r\nimport TsComponent from \"./TsStatsComponent\"\r\nimport{useFetch} from \"./../utils/customHooks\"\r\nimport { CountryStat } from \"./TsStats\";\r\nimport CardStatComponent from \"./CardStatComponents\"\r\n\r\n\r\nconst CustomCountry = ( {allData,map,tsData,tsDataLoading,allDataLoading,dayCount}) => {\r\n    var {country,province} = useParams()\r\n\r\n    const notFoundError = \"Error , it seems like the country specific infos is not supported by the dataset or that the name is incorrect , please review your country and make sure it is on the dataset\";\r\n    const [unableError, setIsUnableError] = React.useState(false);\r\n    const [historicalData, setHistoricalData] = React.useState(null);\r\n    const [mydata,setMyData] = React.useState(null);\r\n    var [countriesSummaryStat,countriesSummaryStatLoading,countriesSummaryStatError] = useFetch(\"https://disease.sh/v3/covid-19/countries/\"+country+\"?strict=false&allowNull=true\");\r\n    var [oldcountriesSummaryStat,oldcountriesSummaryStatLoading,oldcountriesSummaryStatError] = useFetch(\"https://disease.sh/v3/covid-19/countries/\"+country+\"?yesterday=true&strict=false&allowNull=true\");\r\n    var [oldoldcountriesSummaryStat,oldoldcountriesSummaryStatLoading,oldoldcountriesSummaryStatError] = useFetch(\"https://disease.sh/v3/covid-19/countries/\"+country+\"?twoDaysAgo=true&strict=false&allowNull=true\");\r\n\r\n    React.useEffect(() => {\r\n        if(!tsDataLoading && !allDataLoading && tsData!== null && allData!== null ){\r\n\r\n        let foundFromTsData = tsData.find(x => x.country === country && (x.province === province));\r\n        let foundFromMyData = allData.find(x => x.country === country && (x.province === province));\r\n        let newmydata= {...foundFromMyData,...foundFromTsData}\r\n        if((!foundFromMyData || !foundFromTsData)){\r\n            console.log(tsData,allData,\"my data\")\r\n            setIsUnableError(true)\r\n        }else {\r\n            setIsUnableError(false)\r\n            console.log(\"gut\")\r\n            if(!mydata || (mydata && ((newmydata.country !== mydata.country)  || (newmydata.province !== mydata.province))))\r\n                setMyData(newmydata)\r\n        \r\n        if(map !== null && mydata !== null )\r\n           map.flyTo([mydata.coordinates.latitude,mydata.coordinates.longitude],10,{duration:1.5})\r\n        if(mydata !== null ){\r\n            const queryUrl = province !== \"null\" ? \"https://disease.sh/v3/covid-19/historical/\"+country+\"/\"+province+\"?lastdays=\"+\"all\" :  \"https://disease.sh/v3/covid-19/historical/\"+country+\"?lastdays=\"+\"all\";\r\n            fetch(queryUrl).then((data) => {\r\n                return data.json()\r\n            }).then((data) => {\r\n                setHistoricalData(data);      \r\n            }).catch((err)=>{\r\n                setIsUnableError(true)\r\n            })\r\n        }\r\n            }\r\n       }\r\n      /* if(!countriesSummaryStatLoading)\r\n       console.log(countriesSummaryStat ,\"new\")*/\r\n    }, [tsData,allData,mydata,country,province,tsDataLoading,allDataLoading,dayCount,countriesSummaryStatLoading])\r\n\r\n        return(<>\r\n            <div> \r\n                {/*unableError!==null ? notFoundError : \"Found :\"+country + \" \" + province*/}\r\n            </div>\r\n            {  <CardStatComponent  arr = {   ['cases', 'deaths', 'recovered', 'tests', 'population'] }\r\ndata = {oldcountriesSummaryStat} dataLoading = {oldcountriesSummaryStatLoading} lastData = {oldoldcountriesSummaryStat} lastDataLoading = {oldoldcountriesSummaryStatLoading} />}\r\n            {(historicalData!==null && mydata !== null) &&  (<TsComponent historicalData = {historicalData} mydata = {mydata} />)}\r\n        </>\r\n    ) \r\n}\r\n\r\n\r\nexport default CustomCountry;","D:\\Project\\achref\\Covid19Stat\\src\\components\\Footer.jsx",[],"D:\\Project\\achref\\Covid19Stat\\src\\components\\TsStatsComponent.jsx",[],"D:\\Project\\achref\\Covid19Stat\\src\\components\\Selector.jsx",[],"D:\\Project\\achref\\Covid19Stat\\src\\components\\NavBar.jsx",["100","101","102"],"import \"./../style/nav.scss\"\r\nimport hmImg from \"./../assets/home.svg\"\r\nimport covidImg from \"./../assets/coronavirus.svg\"\r\nimport virusImg from \"./../assets/virus.svg\"\r\nimport testImg from \"./../assets/test-sanguin.svg\"\r\nimport vaccineImg from \"./../assets/syringe.svg\"\r\nimport React from \"react\"\r\nimport{Link, Router,Route} from \"react-router-dom\"\r\nconst NavBar = ({nv})=> {\r\n\r\n    return <>\r\n     <nav ref={nv}>\r\n\r\n        <div className=\"nav__holder\"> \r\n        <h1> Covid 19</h1>\r\n        <ul className=\"nav__navigation\">\r\n            <li> <img src={hmImg} alt=\"\"/> <Link to=\"/\" >World</Link></li>\r\n            <li> <img src={covidImg} alt=\"\"/>  <Link to=\"/custom/\">Custom Map</Link></li>\r\n            <li> <img src={vaccineImg} alt=\"\"/>  <Link to=\"/vaccine/\">Vaccine</Link></li>\r\n            <li> <img src={testImg} alt=\"\"/>  <a href=\"https://www.who.int/fr/emergencies/diseases/novel-coronavirus-2019\" target=\"__blank\">Infos</a></li>\r\n        </ul>\r\n        </div>\r\n    </nav>\r\n    \r\n    </>\r\n}\r\nexport default NavBar;\r\n\r\n/*            <li> <img src={virusImg} alt=\"\"/>  <Link to=\"/aboutus\">About Us</Link></li>\r\n*/","D:\\Project\\achref\\Covid19Stat\\src\\components\\Vaccines.jsx",["103"],"import {useFetch} from \"./../utils/customHooks\"\r\nimport React from 'react'\r\nimport \"./../style/vaccine.scss\"\r\nimport VaccineListElement from \"./VaccineListElement\"\r\nconst Vaccines = ()=>{\r\n    const [vaccineData,vaccineDataLoading,vaccineDataError] = useFetch(\"https://disease.sh/v3/covid-19/vaccine\");\r\n    return <>\r\n    <div className =\"stat-header\">\r\n        <h1>{\"Vaccines :\"}</h1>\r\n\r\n    </div>        \r\n    <div className=\"vaccine\">\r\n        {!vaccineDataLoading && vaccineData.data.map((item,index) =>{\r\n            return <VaccineListElement data = {item} key={index} />\r\n        })}\r\n\r\n    </div>\r\n    <small className=\"source\"> <span>Source : </span>{vaccineData && vaccineData.source}</small>\r\n\r\n    </>\r\n}\r\nexport default Vaccines","D:\\Project\\achref\\Covid19Stat\\src\\components\\CardStatComponents.jsx",[],"D:\\Project\\achref\\Covid19Stat\\src\\components\\Loading.jsx",[],"D:\\Project\\achref\\Covid19Stat\\src\\utils\\customHooks.jsx",["104"],"import {useState,useEffect} from 'react'\r\nconst useFetch = (url,callBack = null) =>{\r\n    const [loading,setLoading] = useState(true);\r\n    const [error,setError] = useState(null);\r\n    const [data,setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(url).then((data) => {\r\n              return data.json()\r\n          }).then((data) => {     \r\n              if(callBack !== null) \r\n                data = callBack(data)\r\n              setData(data); \r\n              setLoading(false);\r\n          }).catch((err)=>{\r\n              setError(err);\r\n              setLoading(false);\r\n          }) \r\n    },[url])\r\n    \r\n    return [data,loading,error];\r\n}\r\n\r\nexport {useFetch}","D:\\Project\\achref\\Covid19Stat\\src\\components\\MainMap.jsx",["105"],"import 'react-leaflet'\r\nimport React from 'react'\r\nimport {useMap, MapContainer  ,TileLayer,Marker ,Popup } from 'react-leaflet';\r\nimport {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport L from 'leaflet'\r\nimport pinicon from \"./../assets/marker.svg\"\r\nimport Loading from './Loading';\r\nconst customMarker = new  L.icon (\r\n  {\r\n    iconUrl : pinicon ,\r\n    iconSize: [50, 52],\r\n    iconAnchor: [25, 52],\r\n    popupAnchor: [0, -52],\r\n    shadowSize: [0, 0],\r\n    shadowAnchor: [20, 52]\r\n  }\r\n)\r\n\r\nconst MapProp = ({setMap})=>{\r\n    const map = useMap()\r\n    useEffect(()=>{\r\n        setMap(map)\r\n    },[])\r\n\r\n    return null\r\n}\r\nconst CustomMarker = ({data})=>{\r\n    return (<>\r\n\r\n       {data ?  (<Marker position = {[data.coordinates.latitude,data.coordinates.longitude]} className=\"marker\" icon={customMarker}>\r\n            <Popup className = \"popUp\">\r\n                {data.province!== \"null\"  ? (<>\r\n                    <h2>{data.province}</h2>\r\n                    <h4>{data.country}</h4>\r\n                    </>) :( <>\r\n                        <h2>{data.country}</h2>\r\n                     </>)\r\n\r\n\r\n                }\r\n                <p>Confirmed : {data.stats.confirmed}</p>\r\n                <p>Deaths : {data.stats.deaths}</p>\r\n                <p>Recovered : {data.stats.recovered}</p>\r\n                <Link to={\"/custom/\"+(data.country)+(data.province!==\"null\" ? (\"/\"+(data.province)) : \"/null\")} >Find more...</Link>\r\n            </Popup>\r\n        </Marker>) : (<></>)\r\n        }\r\n\r\n    </>)\r\n}\r\nconst MainMap = ({allData,setMap}) => {\r\n\r\n    return (<><React.Suspense fallback={        <Loading/>\r\n}>  <MapContainer center = {[15,15]} zoom = {10}>\r\n            <TileLayer\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            <MapProp setMap = {setMap}/>\r\n            {allData.map((item,index)=>{\r\n               return <CustomMarker data={item} key={index} />\r\n            })}\r\n\r\n        </MapContainer >\r\n        </React.Suspense>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default (MainMap);","D:\\Project\\achref\\Covid19Stat\\src\\components\\TsStats.jsx",["106"],"import React from 'react'\r\nimport * as V from 'victory'\r\nimport colors from \"../utils/colors\"\r\nconst DefaultPlot =({dataAll})=> {\r\n  const data = dataAll.data\r\n  const suffixUnit = [\"\",\"K\",\"M\",\"B\"]\r\n  const ref = React.useRef(null)\r\n\r\n    const [selectedDomain, setselectedDomain] = React.useState(null);\r\n    const [zoomDomain, setzoomDomain] = React.useState({x : [data[0].x,data[data.length-1].x]});\r\n\r\n    const handleZoom  =((domain)=> {\r\n        setselectedDomain(domain);\r\n    })\r\n\r\n    const handleBrush  = (domain)=> {\r\n      setzoomDomain(domain);\r\n    }\r\n\r\n    const LimitData = (data)=>{\r\n       return zoomDomain!==null? data.filter(d=> d.x >= zoomDomain.x[0] && d.x <= zoomDomain.x[1]).filter((d,i) => ((i % Math.max(1,Math.ceil(((zoomDomain.x[1].getTime() - zoomDomain.x[0].getTime())/(1000*3600*24))/110) ) ) === 0)) : data;\r\n    }\r\n    const tickData = (data)=> ([...new Set(data.map(o => new Date(o.x.getFullYear(),o.x.getMonth(),1)))]);\r\n\r\n    const datalabels = (data)=> (data).map(o =>  o.y.toString());\r\n\r\n    React.useEffect(() => {\r\n      console.log(\"zum\",zoomDomain)\r\n      console.log(\"limit\",LimitData(data))\r\n\r\n  }, [zoomDomain]);\r\n\r\n    return (\r\n      <div className=\"graph-container\" ref = {ref}>\r\n          <V.VictoryChart \r\n          height = {\r\n             (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent))? 850 : 400\r\n          }\r\n            width = { 700}\r\n            style={{\r\n              axisLabel: { padding: 130 },\r\n          }}\r\n            scale={{x: \"time\"}}\r\n            theme={V.VictoryTheme.material}\r\n            containerComponent={\r\n              <V.VictoryZoomContainer \r\n                responsive = {true}\r\n                zoomDimension=\"x\"\r\n                zoomDomain={zoomDomain}\r\n                onZoomDomainChange={handleZoom}\r\n              />\r\n            }\r\n          >\r\n          <V.VictoryAxis  dependentAxis                 \r\n          theme={V.VictoryTheme.material}\r\n\r\n        tickFormat={(x) => {\r\n            \r\n            return x / Math.pow(10,dataAll.divider*3)  + suffixUnit[dataAll.divider];\r\n        } }\r\n        style={{size:10}}/>\r\n          \r\n          <V.VictoryAxis  />\r\n\r\n            <V.VictoryBar\r\n\r\n              style={{\r\n                fill: colors.red\r\n              }}\r\n              data={LimitData(data)}\r\n              labels={datalabels(LimitData(data))}\r\n              labelComponent={\r\n                <V.VictoryTooltip      pointerOrientation=\"bottom\" cornerRadius={30}\r\n                flyoutStyle={{ stroke: colors.rose, strokeWidth: 1,fill : colors.white}}\r\n                />\r\n              }\r\n            />\r\n\r\n<V.VictoryLine\r\n\r\n              style={{\r\n                data: {stroke: colors.rose}\r\n              }}\r\n              data={LimitData(data)}            />\r\n\r\n\r\n            <V.VictoryScatter\r\n            labels={datalabels(LimitData(data))}\r\n            size={1.5}\r\n            labelComponent={\r\n              <V.VictoryTooltip      pointerOrientation=\"bottom\" cornerRadius={30}\r\n              flyoutStyle={{ stroke: colors.rose, strokeWidth: 1,fill : colors.white}}\r\n              />\r\n            }\r\n              style={{\r\n                data: {fill: colors.black}\r\n              }}\r\n              data={LimitData(data)}            />\r\n\r\n\r\n          </V.VictoryChart>\r\n\r\n          <V.VictoryChart\r\n                      theme={V.VictoryTheme.material}\r\n\r\n            height={90}\r\n            width={700}\r\n            scale={{x: \"time\"}}\r\n            padding={{top: 0, left: 20, right: 20, bottom: 50}}\r\n            containerComponent={\r\n              <V.VictoryBrushContainer responsive={true}\r\n                brushDimension=\"x\"\r\n                brushDomain={selectedDomain}\r\n                onBrushDomainChange={handleBrush}\r\n              />\r\n            }\r\n          >\r\n            <V.VictoryAxis\r\n                theme={V.VictoryTheme.material}\r\n\r\n              tickValues={tickData(data)}\r\n              tickFormat={(x) => {\r\n                  const ll = x.getFullYear().toString()\r\n                  return x.getMonth() + \"/\" + ll.slice(2)\r\n              } }\r\n              style={{size:10}}\r\n            />\r\n\r\n          <V.VictoryLine\r\n                      theme={V.VictoryTheme.material}\r\n\r\n              style={{\r\n                data: {stroke: colors.red}\r\n              }}\r\n              data={data}            />\r\n          </V.VictoryChart>\r\n\r\n      </div>\r\n\r\n    );\r\n \r\n    \r\n\r\n}\r\nconst processDT =  (type,moreData)=>{\r\n    var xs = [type] \r\n    var divider = 0;\r\n    var values = xs.map((p)=>{\r\n      //to be salahed\r\n        var x = Object.keys(moreData.timeline[p])\r\n        var max = Math.max(...(x.map(u => moreData.timeline[p][u])))\r\n        var multiplier = Math.ceil(Math.log10(max))\r\n        while(multiplier > 3){\r\n          multiplier-= 3;\r\n          divider++;\r\n        }\r\n      return x.map((u)=>{\r\n          let k = u.split('/').reverse();k[0] = \"20\".concat(k[0]);\r\n                return {\r\n                    x :  new Date(k[0],k[2],k[1]),\r\n                    y : moreData.timeline[p][u] \r\n                }\r\n            })\r\n        \r\n    })[0]\r\n     return {data :  values,divider}\r\n}\r\n\r\nconst CountryStat = ({title,stat,historicalData,mydata})=>{\r\n  /*React.useEffect(() => {\r\n    console.log(mydata,\"hist\")\r\n    return () => {\r\n    };\r\n  }, [mydata]);*/\r\n    return<>\r\n    <div className =\"stat-header\">\r\n    <h1 >{title}</h1>\r\n    </div>\r\n    <DefaultPlot  dataAll={ processDT(stat,historicalData)} />\r\n    <div style={{paddingLeft:\"60px\",fontSize:\"1.1rem\"}}> Sources :disease.sh - Johns Hopkins University, updated every 10 minutes</div>\r\n    {/*<div style={{paddingLeft:\"60px\",fontSize:\"1.1rem\"}}> Last Update : {mydata.updatedAt}</div>*/}\r\n    </>\r\n}\r\n\r\n\r\nexport {CountryStat}","D:\\Project\\achref\\Covid19Stat\\src\\components\\VaccineListElement.jsx",[],"D:\\Project\\achref\\Covid19Stat\\src\\components\\Card.jsx",["107"],"import \"./../style/card.scss\"\r\nimport {useFetch} from \"./../utils/customHooks\"\r\nimport upArrow from \"./../assets/up-arrow.svg\"\r\nimport downArrow from \"./../assets/down-arrow.svg\"\r\n\r\nconst Card = ({data,dataArray,lastData = null}) => {\r\n   \r\n    return <div className=\"card-container-head\">\r\n        <div className=\"card-container\">\r\n            <div className=\"card-container__left\">\r\n                <div className=\"card-title\">\r\n                    <h1>{data.country != null ?  data.country : \"World\"}</h1>\r\n                    <div className=\"card-title__flag\" style={{backgroundImage : \"url(\"+( data.countryInfo ? (data.countryInfo.flag || \"\") : \"\" )+ \")\",backgroundSize:\"cover\",backgroundRepeat:\"no-repeat\",backgroundPosition:\"center\"}}></div>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                   { dataArray.map( (x,i) => <div  key = {i} className=\"card-body__item\">\r\n                        <div className=\"field\">{x}</div>\r\n                        <div>{data[x] || \"Missing Value\"}</div>\r\n                        <div>{lastData===null  ? \"\" : <img src={parseInt(lastData[x]) < parseInt(data[x]) ? upArrow : downArrow } style={{opacity :( parseInt(lastData[x]) === parseInt(data[x]) )? 0 : 1 }} alt=\"\"/> }</div>\r\n                    </div>)\r\n                    }\r\n                </div>\r\n\r\n            </div>    \r\n            <div className=\"card-container__right\">\r\n                    <div className=\"card-circle-container\">\r\n                        {['todayCases','todayTests','todayDeaths','todayRecovered'].map((w,i) => <div key={i}  className=\"card-circle-item\">\r\n                            <h2>{w === \"todayTests\" ?  \"LatestTests\" : w}</h2>\r\n                            <div className=\"circle\">{ (w === \"todayTests\" && lastData !== null) ?  -parseInt(lastData[\"tests\"])+parseInt(data[\"tests\"]) :  (data[w] || \"Missing Value\" ) }</div>\r\n                        </div>)}\r\n                    </div>\r\n            </div> \r\n            <div className=\"card-container__footer\">\r\n                <div className=\"card-source\">\r\n                        Sources : <small>disease.sh - Worldometers</small>\r\n                </div>\r\n                <div className=\"card-date\">\r\n                       Updated Last At: {new Date(data.updated).toUTCString()}\r\n                </div>\r\n\r\n            </div> \r\n            </div> \r\n    </div>\r\n}\r\n\r\nexport default Card","D:\\Project\\achref\\Covid19Stat\\src\\utils\\colors.jsx",["108"],"const black = \"rgb(53, 45, 57)\"\r\nconst rose = \"rgb(255, 105, 120)\"\r\nconst white = \"rgb(255, 252, 249)\"\r\nconst red = \"rgb(206, 58, 77)\"\r\nconst blue = \"rgb(8, 75, 131)\"\r\n\r\nexport default { black, rose, white, red, blue }",{"ruleId":"109","severity":1,"message":"110","line":5,"column":3,"nodeType":"111","messageId":"112","endLine":5,"endColumn":7},{"ruleId":"109","severity":1,"message":"113","line":22,"column":51,"nodeType":"111","messageId":"112","endLine":22,"endColumn":73},{"ruleId":"109","severity":1,"message":"114","line":23,"column":57,"nodeType":"111","messageId":"112","endLine":23,"endColumn":82},{"ruleId":"109","severity":1,"message":"115","line":25,"column":20,"nodeType":"111","messageId":"112","endLine":25,"endColumn":31},{"ruleId":"109","severity":1,"message":"116","line":26,"column":39,"nodeType":"111","messageId":"112","endLine":26,"endColumn":55},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"109","severity":1,"message":"121","line":5,"column":10,"nodeType":"111","messageId":"112","endLine":5,"endColumn":21},{"ruleId":"109","severity":1,"message":"122","line":12,"column":11,"nodeType":"111","messageId":"112","endLine":12,"endColumn":24},{"ruleId":"109","severity":1,"message":"123","line":13,"column":12,"nodeType":"111","messageId":"112","endLine":13,"endColumn":23},{"ruleId":"109","severity":1,"message":"124","line":16,"column":10,"nodeType":"111","messageId":"112","endLine":16,"endColumn":30},{"ruleId":"109","severity":1,"message":"125","line":16,"column":59,"nodeType":"111","messageId":"112","endLine":16,"endColumn":84},{"ruleId":"109","severity":1,"message":"126","line":17,"column":65,"nodeType":"111","messageId":"112","endLine":17,"endColumn":93},{"ruleId":"109","severity":1,"message":"127","line":18,"column":71,"nodeType":"111","messageId":"112","endLine":18,"endColumn":102},{"ruleId":"128","severity":1,"message":"129","line":38,"column":130,"nodeType":"130","messageId":"131","endLine":38,"endColumn":131},{"ruleId":"128","severity":1,"message":"129","line":38,"column":205,"nodeType":"130","messageId":"131","endLine":38,"endColumn":206},{"ruleId":"132","severity":1,"message":"133","line":51,"column":8,"nodeType":"134","endLine":51,"endColumn":114,"suggestions":"135"},{"ruleId":"109","severity":1,"message":"136","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":16},{"ruleId":"109","severity":1,"message":"137","line":8,"column":14,"nodeType":"111","messageId":"112","endLine":8,"endColumn":20},{"ruleId":"109","severity":1,"message":"138","line":8,"column":21,"nodeType":"111","messageId":"112","endLine":8,"endColumn":26},{"ruleId":"109","severity":1,"message":"139","line":6,"column":43,"nodeType":"111","messageId":"112","endLine":6,"endColumn":59},{"ruleId":"132","severity":1,"message":"140","line":19,"column":7,"nodeType":"134","endLine":19,"endColumn":12,"suggestions":"141"},{"ruleId":"132","severity":1,"message":"142","line":24,"column":7,"nodeType":"134","endLine":24,"endColumn":9,"suggestions":"143"},{"ruleId":"132","severity":1,"message":"144","line":31,"column":6,"nodeType":"134","endLine":31,"endColumn":18,"suggestions":"145"},{"ruleId":"109","severity":1,"message":"146","line":2,"column":9,"nodeType":"111","messageId":"112","endLine":2,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":7,"column":1,"nodeType":"149","endLine":7,"endColumn":49},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'worldSummaryStatsError' is assigned a value but never used.","'oldworldSummaryStatsError' is assigned a value but never used.","'setDayCount' is assigned a value but never used.","'worldTsDataError' is assigned a value but never used.","no-native-reassign",["150"],"no-negated-in-lhs",["151"],"'CountryStat' is defined but never used.","'notFoundError' is assigned a value but never used.","'unableError' is assigned a value but never used.","'countriesSummaryStat' is assigned a value but never used.","'countriesSummaryStatError' is assigned a value but never used.","'oldcountriesSummaryStatError' is assigned a value but never used.","'oldoldcountriesSummaryStatError' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.","ArrayExpression",["152"],"'virusImg' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'vaccineDataError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'callBack'. Either include it or remove the dependency array. If 'callBack' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["153"],"React Hook useEffect has missing dependencies: 'map' and 'setMap'. Either include them or remove the dependency array. If 'setMap' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["154"],"React Hook React.useEffect has missing dependencies: 'LimitData' and 'data'. Either include them or remove the dependency array.",["155"],"'useFetch' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [tsData, allData, mydata, country, province, tsDataLoading, allDataLoading, dayCount, countriesSummaryStatLoading, map]",{"range":"164","text":"165"},"Update the dependencies array to be: [callBack, url]",{"range":"166","text":"167"},"Update the dependencies array to be: [map, setMap]",{"range":"168","text":"169"},"Update the dependencies array to be: [LimitData, data, zoomDomain]",{"range":"170","text":"171"},[2967,3073],"[tsData, allData, mydata, country, province, tsDataLoading, allDataLoading, dayCount, countriesSummaryStatLoading, map]",[614,619],"[callBack, url]",[625,627],"[map, setMap]",[1145,1157],"[LimitData, data, zoomDomain]"]